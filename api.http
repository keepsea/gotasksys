### ================================================
### 任务1：系统管理员创建各类角色的用户
### ================================================

# @name login_as_admin
POST http://localhost:8080/api/v1/login
Content-Type: application/json

{
  "username": "admin",
  "password": "Password123!@#"
}

@admin_token = {{login_as_admin.response.body.token}}

### (测试1.1) Admin 创建一个 Manager
POST http://localhost:8080/api/v1/admin/users
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "username": "manager_new",
  "password": "Password123!@#",
  "real_name": "项目经理-新",
  "role": "manager"
}

### (测试1.2) Admin 创建一个 Executor
POST http://localhost:8080/api/v1/admin/users
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "username": "executor_new",
  "password": "Password123!@#",
  "real_name": "核心执行人-新",
  "role": "executor"
}


### (测试1.3) Admin 创建一个 Creator
POST http://localhost:8080/api/v1/admin/users
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "username": "creator_new2",
  "password": "Password123!@#",
  "real_name": "外部创建者-新",
  "role": "creator"
}

### (测试1.4) Admin 尝试创建一个无效角色 (预期会失败)
POST http://localhost:8080/api/v1/admin/users
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "username": "invalid_user",
  "password": "Password123!@#",
  "real_name": "无效角色用户",
  "role": "some_invalid_role"
}


### ================================================
### 任务2：验证领取任务(claim)的权限
### ================================================

# 步骤A: Creator登录并创建一个任务
# @name login_as_creator
POST http://localhost:8080/api/v1/login
Content-Type: application/json

{
  "username": "creator_new2",
  "password": "Password123!@#"
}

@creator_token = {{login_as_creator.response.body.token}}

###
# @name create_task_for_claim_test
POST http://localhost:8080/api/v1/tasks
Content-Type: application/json
Authorization: Bearer {{creator_token}}

{
    "title": "权限测试任务-c2",
    "description": "这个任务将被用来c2测试领取权限",
    "priority": "P1",
    "effort": 8,
    "task_type_id": "85bac575-3d4f-4256-b8de-343e57355d9e"
}

@claim_test_task_id = {{create_task_for_claim_test.response.body.id}}


# 步骤B: Manager登录并审批这个任务，使其进入任务池
###
# @name login_as_manager
POST http://localhost:8080/api/v1/login
Content-Type: application/json

{
  "username": "manager_new",
  "password": "Password123!@#"
}

@manager_token = {{login_as_manager.response.body.token}}

###
POST http://localhost:8080/api/v1/tasks/{{claim_test_task_id}}/approve
Authorization: Bearer {{manager_token}}


# 步骤C: 核心测试 - 用不同角色的Token尝试领取任务
### (测试2.1) Creator 尝试领取任务 (预期403 Forbidden)
POST http://localhost:8080/api/v1/tasks/{{claim_test_task_id}}/claim
Authorization: Bearer {{creator_token}}


### (测试2.2) Executor 尝试领取任务 (预期200 OK)
# @name login_as_executor
POST http://localhost:8080/api/v1/login
Content-Type: application/json

{
  "username": "executor_new",
  "password": "Password123!@#"
}

@executor_token = {{login_as_executor.response.body.token}}

###
POST http://localhost:8080/api/v1/tasks/{{claim_test_task_id}}/claim
Authorization: Bearer {{executor_token}}

### (测试3.1) 验证任务列表权限：以 Manager 身份查看
# 预期结果：能看到数据库里的所有任务
@manager_token = {{login_as_manager.response.body.token}}
###
GET http://localhost:8080/api/v1/tasks
Authorization: Bearer {{manager_token}}


### (测试3.2) 验证任务列表权限：以 Executor 身份查看
# 预期结果：只能看到【任务池中的任务】+【分配给他自己的任务】
@executor_token = {{login_as_executor.response.body.token}}
###
GET http://localhost:8080/api/v1/tasks
Authorization: Bearer {{executor_token}}


### (测试3.3) 验证任务列表权限：以 Creator 身份查看
# 预期结果：只能看到【所有已通过审核的公开任务】+【他自己创建的待审核任务】
@creator_token = {{login_as_creator.response.body.token}}
###
GET http://localhost:8080/api/v1/tasks
Authorization: Bearer {{creator_token}}